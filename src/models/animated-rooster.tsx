/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: LostBoyz2078 (https://sketchfab.com/LostModels2025)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chicken-walk-4f17286860b84c90b8e0671003a896a8
Title: Chicken walk
*/

'use client'

import { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { Group } from 'three'

interface AnimatedRoosterProps {
  currentAnimation?: string;
  [key: string]: unknown;
}

export function AnimatedRooster({ currentAnimation = 'idle', ...props }: AnimatedRoosterProps) {
  const group = useRef<Group>(null);

  // Load the 3D model and animations from the provided GLTF file
  const { nodes, materials, animations } = useGLTF('/3d/animated-rooster.glb');

  // Get access to the animations for the rooster
  const { actions } = useAnimations(animations, group);

  // Animation handling - play selected animation with proper cleanup
  useEffect(() => {
    // Stop all animations first
    Object.values(actions).forEach((action) => {
      if (action) action.stop();
    });

    // Play selected animation
    if (actions[currentAnimation]) {
      actions[currentAnimation].play();
    }

    // Cleanup function to stop animations on unmount
    return () => {
      if (actions) {
        Object.values(actions).forEach((action) => {
          if (action) {
            action.stop();
          }
        });
      }
    };
  }, [actions, currentAnimation]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="GLTF_created_0">
                <primitive object={nodes.GLTF_created_0_rootJoint} />
                <skinnedMesh
                  name="Object_7"
                  geometry={(nodes as any).Object_7.geometry}
                  material={materials.Chicken_MI}
                  skeleton={(nodes as any).Object_7.skeleton}
                />
                <group name="Chicken_Skel_63">
                  <group name="Chicken_Skel_64" />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/3d/animated-rooster.glb')
